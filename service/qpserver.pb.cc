// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qpserver.proto

#include "qpserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace qpserver {
class RepRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepRet>
      _instance;
} _RepRet_default_instance_;
class ReqSendSmsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqSendSms>
      _instance;
} _ReqSendSms_default_instance_;
class ReqVerifySmsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqVerifySms>
      _instance;
} _ReqVerifySms_default_instance_;
class ReqRegVerifyItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqRegVerifyItem>
      _instance;
} _ReqRegVerifyItem_default_instance_;
class ReqUpdUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqUpdUser>
      _instance;
} _ReqUpdUser_default_instance_;
class ReqMapUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqMapUser>
      _instance;
} _ReqMapUser_default_instance_;
class ReqInOutGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqInOutGame>
      _instance;
} _ReqInOutGame_default_instance_;
}  // namespace qpserver
namespace protobuf_qpserver_2eproto {
void InitDefaultsRepRetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_RepRet_default_instance_;
    new (ptr) ::qpserver::RepRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::RepRet::InitAsDefaultInstance();
}

void InitDefaultsRepRet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRepRetImpl);
}

void InitDefaultsReqSendSmsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqSendSms_default_instance_;
    new (ptr) ::qpserver::ReqSendSms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqSendSms::InitAsDefaultInstance();
}

void InitDefaultsReqSendSms() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqSendSmsImpl);
}

void InitDefaultsReqVerifySmsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqVerifySms_default_instance_;
    new (ptr) ::qpserver::ReqVerifySms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqVerifySms::InitAsDefaultInstance();
}

void InitDefaultsReqVerifySms() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqVerifySmsImpl);
}

void InitDefaultsReqRegVerifyItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqRegVerifyItem_default_instance_;
    new (ptr) ::qpserver::ReqRegVerifyItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqRegVerifyItem::InitAsDefaultInstance();
}

void InitDefaultsReqRegVerifyItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqRegVerifyItemImpl);
}

void InitDefaultsReqUpdUserImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqUpdUser_default_instance_;
    new (ptr) ::qpserver::ReqUpdUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqUpdUser::InitAsDefaultInstance();
}

void InitDefaultsReqUpdUser() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqUpdUserImpl);
}

void InitDefaultsReqMapUserImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqMapUser_default_instance_;
    new (ptr) ::qpserver::ReqMapUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqMapUser::InitAsDefaultInstance();
}

void InitDefaultsReqMapUser() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqMapUserImpl);
}

void InitDefaultsReqInOutGameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qpserver::_ReqInOutGame_default_instance_;
    new (ptr) ::qpserver::ReqInOutGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qpserver::ReqInOutGame::InitAsDefaultInstance();
}

void InitDefaultsReqInOutGame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqInOutGameImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::RepRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::RepRet, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::RepRet, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqSendSms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqSendSms, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqSendSms, phone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqVerifySms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqVerifySms, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqVerifySms, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqVerifySms, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqVerifySms, erase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqRegVerifyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqRegVerifyItem, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqRegVerifyItem, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqRegVerifyItem, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, spreader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, rebate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqUpdUser, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqMapUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqMapUser, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqMapUser, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqMapUser, third_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, face_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, playtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, vscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, tax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qpserver::ReqInOutGame, nickname_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::qpserver::RepRet)},
  { 7, -1, sizeof(::qpserver::ReqSendSms)},
  { 14, -1, sizeof(::qpserver::ReqVerifySms)},
  { 23, -1, sizeof(::qpserver::ReqRegVerifyItem)},
  { 31, -1, sizeof(::qpserver::ReqUpdUser)},
  { 42, -1, sizeof(::qpserver::ReqMapUser)},
  { 50, -1, sizeof(::qpserver::ReqInOutGame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_RepRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqSendSms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqVerifySms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqRegVerifyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqUpdUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqMapUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qpserver::_ReqInOutGame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qpserver.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016qpserver.proto\022\010qpserver\"%\n\006RepRet\022\014\n\004"
      "code\030\001 \001(\005\022\r\n\005error\030\002 \001(\t\")\n\nReqSendSms\022"
      "\014\n\004kind\030\001 \001(\005\022\r\n\005phone\030\002 \001(\t\"H\n\014ReqVerif"
      "ySms\022\014\n\004kind\030\001 \001(\005\022\r\n\005phone\030\002 \001(\t\022\014\n\004cod"
      "e\030\003 \001(\t\022\r\n\005erase\030\004 \001(\010\"A\n\020ReqRegVerifyIt"
      "em\022\r\n\005phone\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\020\n\010nickn"
      "ame\030\003 \001(\t\"n\n\nReqUpdUser\022\014\n\004user\030\001 \001(\005\022\020\n"
      "\010spreader\030\002 \001(\005\022\016\n\006rebate\030\003 \001(\005\022\r\n\005phone"
      "\030\004 \001(\t\022\017\n\007machine\030\005 \001(\t\022\020\n\010nickname\030\006 \001("
      "\t\"8\n\nReqMapUser\022\014\n\004user\030\001 \001(\005\022\r\n\005phone\030\002"
      " \001(\t\022\r\n\005third\030\003 \001(\t\"y\n\014ReqInOutGame\022\014\n\004u"
      "ser\030\001 \001(\005\022\014\n\004game\030\002 \001(\005\022\014\n\004face\030\003 \001(\005\022\020\n"
      "\010playtime\030\004 \001(\005\022\016\n\006vscore\030\005 \001(\003\022\013\n\003tax\030\006"
      " \001(\003\022\020\n\010nickname\030\007 \001(\t2\330\002\n\005Logon\0223\n\007Send"
      "Sms\022\024.qpserver.ReqSendSms\032\020.qpserver.Rep"
      "Ret\"\000\0227\n\tVerifySms\022\026.qpserver.ReqVerifyS"
      "ms\032\020.qpserver.RepRet\"\000\0224\n\010EraseSms\022\024.qps"
      "erver.ReqSendSms\032\020.qpserver.RepRet\"\000\022>\n\014"
      "RegPreVerify\022\032.qpserver.ReqRegVerifyItem"
      "\032\020.qpserver.RepRet\"\000\0226\n\nUpdateUser\022\024.qps"
      "erver.ReqUpdUser\032\020.qpserver.RepRet\"\000\0223\n\007"
      "MapUser\022\024.qpserver.ReqMapUser\032\020.qpserver"
      ".RepRet\"\0002D\n\004Game\022<\n\016GamePlayStatis\022\026.qp"
      "server.ReqInOutGame\032\020.qpserver.RepRet\"\000b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qpserver.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_qpserver_2eproto
namespace qpserver {

// ===================================================================

void RepRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepRet::kCodeFieldNumber;
const int RepRet::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepRet::RepRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsRepRet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.RepRet)
}
RepRet::RepRet(const RepRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:qpserver.RepRet)
}

void RepRet::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

RepRet::~RepRet() {
  // @@protoc_insertion_point(destructor:qpserver.RepRet)
  SharedDtor();
}

void RepRet::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RepRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepRet::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepRet& RepRet::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsRepRet();
  return *internal_default_instance();
}

RepRet* RepRet::New(::google::protobuf::Arena* arena) const {
  RepRet* n = new RepRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepRet::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.RepRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool RepRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.RepRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.RepRet.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.RepRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.RepRet)
  return false;
#undef DO_
}

void RepRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.RepRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.RepRet.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.RepRet)
}

::google::protobuf::uint8* RepRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.RepRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.RepRet.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.RepRet)
  return target;
}

size_t RepRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.RepRet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.RepRet)
  GOOGLE_DCHECK_NE(&from, this);
  const RepRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.RepRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.RepRet)
    MergeFrom(*source);
  }
}

void RepRet::MergeFrom(const RepRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.RepRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void RepRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.RepRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepRet::CopyFrom(const RepRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.RepRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepRet::IsInitialized() const {
  return true;
}

void RepRet::Swap(RepRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepRet::InternalSwap(RepRet* other) {
  using std::swap;
  error_.Swap(&other->error_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepRet::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqSendSms::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqSendSms::kKindFieldNumber;
const int ReqSendSms::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqSendSms::ReqSendSms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqSendSms();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqSendSms)
}
ReqSendSms::ReqSendSms(const ReqSendSms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqSendSms)
}

void ReqSendSms::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _cached_size_ = 0;
}

ReqSendSms::~ReqSendSms() {
  // @@protoc_insertion_point(destructor:qpserver.ReqSendSms)
  SharedDtor();
}

void ReqSendSms::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqSendSms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSendSms::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqSendSms& ReqSendSms::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqSendSms();
  return *internal_default_instance();
}

ReqSendSms* ReqSendSms::New(::google::protobuf::Arena* arena) const {
  ReqSendSms* n = new ReqSendSms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSendSms::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqSendSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _internal_metadata_.Clear();
}

bool ReqSendSms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqSendSms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqSendSms.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqSendSms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqSendSms)
  return false;
#undef DO_
}

void ReqSendSms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqSendSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqSendSms.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqSendSms)
}

::google::protobuf::uint8* ReqSendSms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqSendSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqSendSms.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqSendSms)
  return target;
}

size_t ReqSendSms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqSendSms)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 2;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // int32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSendSms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqSendSms)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSendSms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqSendSms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqSendSms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqSendSms)
    MergeFrom(*source);
  }
}

void ReqSendSms::MergeFrom(const ReqSendSms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqSendSms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void ReqSendSms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqSendSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSendSms::CopyFrom(const ReqSendSms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqSendSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSendSms::IsInitialized() const {
  return true;
}

void ReqSendSms::Swap(ReqSendSms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSendSms::InternalSwap(ReqSendSms* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSendSms::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqVerifySms::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqVerifySms::kKindFieldNumber;
const int ReqVerifySms::kPhoneFieldNumber;
const int ReqVerifySms::kCodeFieldNumber;
const int ReqVerifySms::kEraseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqVerifySms::ReqVerifySms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqVerifySms();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqVerifySms)
}
ReqVerifySms::ReqVerifySms(const ReqVerifySms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&erase_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(erase_));
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqVerifySms)
}

void ReqVerifySms::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&erase_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(erase_));
  _cached_size_ = 0;
}

ReqVerifySms::~ReqVerifySms() {
  // @@protoc_insertion_point(destructor:qpserver.ReqVerifySms)
  SharedDtor();
}

void ReqVerifySms::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqVerifySms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqVerifySms::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqVerifySms& ReqVerifySms::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqVerifySms();
  return *internal_default_instance();
}

ReqVerifySms* ReqVerifySms::New(::google::protobuf::Arena* arena) const {
  ReqVerifySms* n = new ReqVerifySms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqVerifySms::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqVerifySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&erase_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(erase_));
  _internal_metadata_.Clear();
}

bool ReqVerifySms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqVerifySms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqVerifySms.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqVerifySms.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool erase = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &erase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqVerifySms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqVerifySms)
  return false;
#undef DO_
}

void ReqVerifySms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqVerifySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqVerifySms.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqVerifySms.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // bool erase = 4;
  if (this->erase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->erase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqVerifySms)
}

::google::protobuf::uint8* ReqVerifySms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqVerifySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqVerifySms.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqVerifySms.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // bool erase = 4;
  if (this->erase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->erase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqVerifySms)
  return target;
}

size_t ReqVerifySms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqVerifySms)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 2;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // int32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  // bool erase = 4;
  if (this->erase() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqVerifySms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqVerifySms)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqVerifySms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqVerifySms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqVerifySms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqVerifySms)
    MergeFrom(*source);
  }
}

void ReqVerifySms::MergeFrom(const ReqVerifySms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqVerifySms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.erase() != 0) {
    set_erase(from.erase());
  }
}

void ReqVerifySms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqVerifySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqVerifySms::CopyFrom(const ReqVerifySms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqVerifySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqVerifySms::IsInitialized() const {
  return true;
}

void ReqVerifySms::Swap(ReqVerifySms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqVerifySms::InternalSwap(ReqVerifySms* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  code_.Swap(&other->code_);
  swap(kind_, other->kind_);
  swap(erase_, other->erase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqVerifySms::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqRegVerifyItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegVerifyItem::kPhoneFieldNumber;
const int ReqRegVerifyItem::kCodeFieldNumber;
const int ReqRegVerifyItem::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegVerifyItem::ReqRegVerifyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqRegVerifyItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqRegVerifyItem)
}
ReqRegVerifyItem::ReqRegVerifyItem(const ReqRegVerifyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqRegVerifyItem)
}

void ReqRegVerifyItem::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReqRegVerifyItem::~ReqRegVerifyItem() {
  // @@protoc_insertion_point(destructor:qpserver.ReqRegVerifyItem)
  SharedDtor();
}

void ReqRegVerifyItem::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRegVerifyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRegVerifyItem::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRegVerifyItem& ReqRegVerifyItem::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqRegVerifyItem();
  return *internal_default_instance();
}

ReqRegVerifyItem* ReqRegVerifyItem::New(::google::protobuf::Arena* arena) const {
  ReqRegVerifyItem* n = new ReqRegVerifyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqRegVerifyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqRegVerifyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReqRegVerifyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqRegVerifyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string phone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqRegVerifyItem.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqRegVerifyItem.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqRegVerifyItem.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqRegVerifyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqRegVerifyItem)
  return false;
#undef DO_
}

void ReqRegVerifyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqRegVerifyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqRegVerifyItem)
}

::google::protobuf::uint8* ReqRegVerifyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqRegVerifyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqRegVerifyItem.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqRegVerifyItem)
  return target;
}

size_t ReqRegVerifyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqRegVerifyItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRegVerifyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqRegVerifyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRegVerifyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegVerifyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqRegVerifyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqRegVerifyItem)
    MergeFrom(*source);
  }
}

void ReqRegVerifyItem::MergeFrom(const ReqRegVerifyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqRegVerifyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void ReqRegVerifyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqRegVerifyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegVerifyItem::CopyFrom(const ReqRegVerifyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqRegVerifyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegVerifyItem::IsInitialized() const {
  return true;
}

void ReqRegVerifyItem::Swap(ReqRegVerifyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegVerifyItem::InternalSwap(ReqRegVerifyItem* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  code_.Swap(&other->code_);
  nickname_.Swap(&other->nickname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqRegVerifyItem::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqUpdUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqUpdUser::kUserFieldNumber;
const int ReqUpdUser::kSpreaderFieldNumber;
const int ReqUpdUser::kRebateFieldNumber;
const int ReqUpdUser::kPhoneFieldNumber;
const int ReqUpdUser::kMachineFieldNumber;
const int ReqUpdUser::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqUpdUser::ReqUpdUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqUpdUser();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqUpdUser)
}
ReqUpdUser::ReqUpdUser(const ReqUpdUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  machine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine().size() > 0) {
    machine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&user_, &from.user_,
    static_cast<size_t>(reinterpret_cast<char*>(&rebate_) -
    reinterpret_cast<char*>(&user_)) + sizeof(rebate_));
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqUpdUser)
}

void ReqUpdUser::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rebate_) -
      reinterpret_cast<char*>(&user_)) + sizeof(rebate_));
  _cached_size_ = 0;
}

ReqUpdUser::~ReqUpdUser() {
  // @@protoc_insertion_point(destructor:qpserver.ReqUpdUser)
  SharedDtor();
}

void ReqUpdUser::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqUpdUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqUpdUser::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqUpdUser& ReqUpdUser::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqUpdUser();
  return *internal_default_instance();
}

ReqUpdUser* ReqUpdUser::New(::google::protobuf::Arena* arena) const {
  ReqUpdUser* n = new ReqUpdUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqUpdUser::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqUpdUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rebate_) -
      reinterpret_cast<char*>(&user_)) + sizeof(rebate_));
  _internal_metadata_.Clear();
}

bool ReqUpdUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqUpdUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 spreader = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spreader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rebate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqUpdUser.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine().data(), static_cast<int>(this->machine().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqUpdUser.machine"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqUpdUser.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqUpdUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqUpdUser)
  return false;
#undef DO_
}

void ReqUpdUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqUpdUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user(), output);
  }

  // int32 spreader = 2;
  if (this->spreader() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->spreader(), output);
  }

  // int32 rebate = 3;
  if (this->rebate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rebate(), output);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  // string machine = 5;
  if (this->machine().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine().data(), static_cast<int>(this->machine().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.machine");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->machine(), output);
  }

  // string nickname = 6;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqUpdUser)
}

::google::protobuf::uint8* ReqUpdUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqUpdUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user(), target);
  }

  // int32 spreader = 2;
  if (this->spreader() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->spreader(), target);
  }

  // int32 rebate = 3;
  if (this->rebate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rebate(), target);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone(), target);
  }

  // string machine = 5;
  if (this->machine().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine().data(), static_cast<int>(this->machine().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.machine");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->machine(), target);
  }

  // string nickname = 6;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqUpdUser.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqUpdUser)
  return target;
}

size_t ReqUpdUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqUpdUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 4;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string machine = 5;
  if (this->machine().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine());
  }

  // string nickname = 6;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // int32 user = 1;
  if (this->user() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user());
  }

  // int32 spreader = 2;
  if (this->spreader() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spreader());
  }

  // int32 rebate = 3;
  if (this->rebate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rebate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqUpdUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqUpdUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqUpdUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqUpdUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqUpdUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqUpdUser)
    MergeFrom(*source);
  }
}

void ReqUpdUser::MergeFrom(const ReqUpdUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqUpdUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.machine().size() > 0) {

    machine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.user() != 0) {
    set_user(from.user());
  }
  if (from.spreader() != 0) {
    set_spreader(from.spreader());
  }
  if (from.rebate() != 0) {
    set_rebate(from.rebate());
  }
}

void ReqUpdUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqUpdUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqUpdUser::CopyFrom(const ReqUpdUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqUpdUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqUpdUser::IsInitialized() const {
  return true;
}

void ReqUpdUser::Swap(ReqUpdUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqUpdUser::InternalSwap(ReqUpdUser* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  machine_.Swap(&other->machine_);
  nickname_.Swap(&other->nickname_);
  swap(user_, other->user_);
  swap(spreader_, other->spreader_);
  swap(rebate_, other->rebate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqUpdUser::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqMapUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqMapUser::kUserFieldNumber;
const int ReqMapUser::kPhoneFieldNumber;
const int ReqMapUser::kThirdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqMapUser::ReqMapUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqMapUser();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqMapUser)
}
ReqMapUser::ReqMapUser(const ReqMapUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  third_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.third().size() > 0) {
    third_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.third_);
  }
  user_ = from.user_;
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqMapUser)
}

void ReqMapUser::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ = 0;
  _cached_size_ = 0;
}

ReqMapUser::~ReqMapUser() {
  // @@protoc_insertion_point(destructor:qpserver.ReqMapUser)
  SharedDtor();
}

void ReqMapUser::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqMapUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqMapUser::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqMapUser& ReqMapUser::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqMapUser();
  return *internal_default_instance();
}

ReqMapUser* ReqMapUser::New(::google::protobuf::Arena* arena) const {
  ReqMapUser* n = new ReqMapUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqMapUser::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqMapUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ = 0;
  _internal_metadata_.Clear();
}

bool ReqMapUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqMapUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqMapUser.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string third = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_third()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->third().data(), static_cast<int>(this->third().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqMapUser.third"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqMapUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqMapUser)
  return false;
#undef DO_
}

void ReqMapUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqMapUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user(), output);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqMapUser.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  // string third = 3;
  if (this->third().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->third().data(), static_cast<int>(this->third().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqMapUser.third");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->third(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqMapUser)
}

::google::protobuf::uint8* ReqMapUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqMapUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user(), target);
  }

  // string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqMapUser.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // string third = 3;
  if (this->third().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->third().data(), static_cast<int>(this->third().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqMapUser.third");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->third(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqMapUser)
  return target;
}

size_t ReqMapUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqMapUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 2;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string third = 3;
  if (this->third().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->third());
  }

  // int32 user = 1;
  if (this->user() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqMapUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqMapUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqMapUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqMapUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqMapUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqMapUser)
    MergeFrom(*source);
  }
}

void ReqMapUser::MergeFrom(const ReqMapUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqMapUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.third().size() > 0) {

    third_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.third_);
  }
  if (from.user() != 0) {
    set_user(from.user());
  }
}

void ReqMapUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqMapUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqMapUser::CopyFrom(const ReqMapUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqMapUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqMapUser::IsInitialized() const {
  return true;
}

void ReqMapUser::Swap(ReqMapUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqMapUser::InternalSwap(ReqMapUser* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  third_.Swap(&other->third_);
  swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqMapUser::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqInOutGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqInOutGame::kUserFieldNumber;
const int ReqInOutGame::kGameFieldNumber;
const int ReqInOutGame::kFaceFieldNumber;
const int ReqInOutGame::kPlaytimeFieldNumber;
const int ReqInOutGame::kVscoreFieldNumber;
const int ReqInOutGame::kTaxFieldNumber;
const int ReqInOutGame::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqInOutGame::ReqInOutGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qpserver_2eproto::InitDefaultsReqInOutGame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpserver.ReqInOutGame)
}
ReqInOutGame::ReqInOutGame(const ReqInOutGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&user_, &from.user_,
    static_cast<size_t>(reinterpret_cast<char*>(&tax_) -
    reinterpret_cast<char*>(&user_)) + sizeof(tax_));
  // @@protoc_insertion_point(copy_constructor:qpserver.ReqInOutGame)
}

void ReqInOutGame::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tax_) -
      reinterpret_cast<char*>(&user_)) + sizeof(tax_));
  _cached_size_ = 0;
}

ReqInOutGame::~ReqInOutGame() {
  // @@protoc_insertion_point(destructor:qpserver.ReqInOutGame)
  SharedDtor();
}

void ReqInOutGame::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqInOutGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqInOutGame::descriptor() {
  ::protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqInOutGame& ReqInOutGame::default_instance() {
  ::protobuf_qpserver_2eproto::InitDefaultsReqInOutGame();
  return *internal_default_instance();
}

ReqInOutGame* ReqInOutGame::New(::google::protobuf::Arena* arena) const {
  ReqInOutGame* n = new ReqInOutGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqInOutGame::Clear() {
// @@protoc_insertion_point(message_clear_start:qpserver.ReqInOutGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tax_) -
      reinterpret_cast<char*>(&user_)) + sizeof(tax_));
  _internal_metadata_.Clear();
}

bool ReqInOutGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpserver.ReqInOutGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 game = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 face = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 vscore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tax = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpserver.ReqInOutGame.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpserver.ReqInOutGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpserver.ReqInOutGame)
  return false;
#undef DO_
}

void ReqInOutGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpserver.ReqInOutGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user(), output);
  }

  // int32 game = 2;
  if (this->game() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->game(), output);
  }

  // int32 face = 3;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->face(), output);
  }

  // int32 playtime = 4;
  if (this->playtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->playtime(), output);
  }

  // int64 vscore = 5;
  if (this->vscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->vscore(), output);
  }

  // int64 tax = 6;
  if (this->tax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tax(), output);
  }

  // string nickname = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqInOutGame.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qpserver.ReqInOutGame)
}

::google::protobuf::uint8* ReqInOutGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qpserver.ReqInOutGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user = 1;
  if (this->user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user(), target);
  }

  // int32 game = 2;
  if (this->game() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->game(), target);
  }

  // int32 face = 3;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->face(), target);
  }

  // int32 playtime = 4;
  if (this->playtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->playtime(), target);
  }

  // int64 vscore = 5;
  if (this->vscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->vscore(), target);
  }

  // int64 tax = 6;
  if (this->tax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tax(), target);
  }

  // string nickname = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpserver.ReqInOutGame.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qpserver.ReqInOutGame)
  return target;
}

size_t ReqInOutGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpserver.ReqInOutGame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 7;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // int32 user = 1;
  if (this->user() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user());
  }

  // int32 game = 2;
  if (this->game() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->game());
  }

  // int32 face = 3;
  if (this->face() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face());
  }

  // int32 playtime = 4;
  if (this->playtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playtime());
  }

  // int64 vscore = 5;
  if (this->vscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vscore());
  }

  // int64 tax = 6;
  if (this->tax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tax());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqInOutGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpserver.ReqInOutGame)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqInOutGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqInOutGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpserver.ReqInOutGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpserver.ReqInOutGame)
    MergeFrom(*source);
  }
}

void ReqInOutGame::MergeFrom(const ReqInOutGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpserver.ReqInOutGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.user() != 0) {
    set_user(from.user());
  }
  if (from.game() != 0) {
    set_game(from.game());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
  if (from.playtime() != 0) {
    set_playtime(from.playtime());
  }
  if (from.vscore() != 0) {
    set_vscore(from.vscore());
  }
  if (from.tax() != 0) {
    set_tax(from.tax());
  }
}

void ReqInOutGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpserver.ReqInOutGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqInOutGame::CopyFrom(const ReqInOutGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpserver.ReqInOutGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqInOutGame::IsInitialized() const {
  return true;
}

void ReqInOutGame::Swap(ReqInOutGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqInOutGame::InternalSwap(ReqInOutGame* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(user_, other->user_);
  swap(game_, other->game_);
  swap(face_, other->face_);
  swap(playtime_, other->playtime_);
  swap(vscore_, other->vscore_);
  swap(tax_, other->tax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqInOutGame::GetMetadata() const {
  protobuf_qpserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qpserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace qpserver

// @@protoc_insertion_point(global_scope)
