// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logon.proto

#ifndef PROTOBUF_logon_2eproto__INCLUDED
#define PROTOBUF_logon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qpcmd {
class RepRet;
class RepRetDefaultTypeInternal;
extern RepRetDefaultTypeInternal _RepRet_default_instance_;
class ReqRegisterAccount;
class ReqRegisterAccountDefaultTypeInternal;
extern ReqRegisterAccountDefaultTypeInternal _ReqRegisterAccount_default_instance_;
class ReqRegisterCode;
class ReqRegisterCodeDefaultTypeInternal;
extern ReqRegisterCodeDefaultTypeInternal _ReqRegisterCode_default_instance_;
class ReqResetPasswd;
class ReqResetPasswdDefaultTypeInternal;
extern ReqResetPasswdDefaultTypeInternal _ReqResetPasswd_default_instance_;
}  // namespace qpcmd

namespace qpcmd {

namespace protobuf_logon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_logon_2eproto

// ===================================================================

class RepRet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpcmd.RepRet) */ {
 public:
  RepRet();
  virtual ~RepRet();

  RepRet(const RepRet& from);

  inline RepRet& operator=(const RepRet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RepRet& default_instance();

  static inline const RepRet* internal_default_instance() {
    return reinterpret_cast<const RepRet*>(
               &_RepRet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RepRet* other);

  // implements Message ----------------------------------------------

  inline RepRet* New() const PROTOBUF_FINAL { return New(NULL); }

  RepRet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepRet& from);
  void MergeFrom(const RepRet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qpcmd.RepRet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_logon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqRegisterCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpcmd.ReqRegisterCode) */ {
 public:
  ReqRegisterCode();
  virtual ~ReqRegisterCode();

  ReqRegisterCode(const ReqRegisterCode& from);

  inline ReqRegisterCode& operator=(const ReqRegisterCode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegisterCode& default_instance();

  static inline const ReqRegisterCode* internal_default_instance() {
    return reinterpret_cast<const ReqRegisterCode*>(
               &_ReqRegisterCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ReqRegisterCode* other);

  // implements Message ----------------------------------------------

  inline ReqRegisterCode* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRegisterCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRegisterCode& from);
  void MergeFrom(const ReqRegisterCode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRegisterCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 1;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // @@protoc_insertion_point(class_scope:qpcmd.ReqRegisterCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  mutable int _cached_size_;
  friend struct protobuf_logon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqRegisterAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpcmd.ReqRegisterAccount) */ {
 public:
  ReqRegisterAccount();
  virtual ~ReqRegisterAccount();

  ReqRegisterAccount(const ReqRegisterAccount& from);

  inline ReqRegisterAccount& operator=(const ReqRegisterAccount& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegisterAccount& default_instance();

  static inline const ReqRegisterAccount* internal_default_instance() {
    return reinterpret_cast<const ReqRegisterAccount*>(
               &_ReqRegisterAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ReqRegisterAccount* other);

  // implements Message ----------------------------------------------

  inline ReqRegisterAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRegisterAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRegisterAccount& from);
  void MergeFrom(const ReqRegisterAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRegisterAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string logonPass = 5;
  void clear_logonpass();
  static const int kLogonPassFieldNumber = 5;
  const ::std::string& logonpass() const;
  void set_logonpass(const ::std::string& value);
  #if LANG_CXX11
  void set_logonpass(::std::string&& value);
  #endif
  void set_logonpass(const char* value);
  void set_logonpass(const char* value, size_t size);
  ::std::string* mutable_logonpass();
  ::std::string* release_logonpass();
  void set_allocated_logonpass(::std::string* logonpass);

  // string account = 6;
  void clear_account();
  static const int kAccountFieldNumber = 6;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string nickName = 7;
  void clear_nickname();
  static const int kNickNameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string spreaderCode = 8;
  void clear_spreadercode();
  static const int kSpreaderCodeFieldNumber = 8;
  const ::std::string& spreadercode() const;
  void set_spreadercode(const ::std::string& value);
  #if LANG_CXX11
  void set_spreadercode(::std::string&& value);
  #endif
  void set_spreadercode(const char* value);
  void set_spreadercode(const char* value, size_t size);
  ::std::string* mutable_spreadercode();
  ::std::string* release_spreadercode();
  void set_allocated_spreadercode(::std::string* spreadercode);

  // string verifyCode = 9;
  void clear_verifycode();
  static const int kVerifyCodeFieldNumber = 9;
  const ::std::string& verifycode() const;
  void set_verifycode(const ::std::string& value);
  #if LANG_CXX11
  void set_verifycode(::std::string&& value);
  #endif
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  ::std::string* mutable_verifycode();
  ::std::string* release_verifycode();
  void set_allocated_verifycode(::std::string* verifycode);

  // string machineID = 10;
  void clear_machineid();
  static const int kMachineIDFieldNumber = 10;
  const ::std::string& machineid() const;
  void set_machineid(const ::std::string& value);
  #if LANG_CXX11
  void set_machineid(::std::string&& value);
  #endif
  void set_machineid(const char* value);
  void set_machineid(const char* value, size_t size);
  ::std::string* mutable_machineid();
  ::std::string* release_machineid();
  void set_allocated_machineid(::std::string* machineid);

  // int32 moduleID = 1;
  void clear_moduleid();
  static const int kModuleIDFieldNumber = 1;
  ::google::protobuf::int32 moduleid() const;
  void set_moduleid(::google::protobuf::int32 value);

  // int32 plazaVersion = 2;
  void clear_plazaversion();
  static const int kPlazaVersionFieldNumber = 2;
  ::google::protobuf::int32 plazaversion() const;
  void set_plazaversion(::google::protobuf::int32 value);

  // int32 deviceType = 3;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 3;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // uint32 userID = 4;
  void clear_userid();
  static const int kUserIDFieldNumber = 4;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qpcmd.ReqRegisterAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr logonpass_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr spreadercode_;
  ::google::protobuf::internal::ArenaStringPtr verifycode_;
  ::google::protobuf::internal::ArenaStringPtr machineid_;
  ::google::protobuf::int32 moduleid_;
  ::google::protobuf::int32 plazaversion_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend struct protobuf_logon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqResetPasswd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpcmd.ReqResetPasswd) */ {
 public:
  ReqResetPasswd();
  virtual ~ReqResetPasswd();

  ReqResetPasswd(const ReqResetPasswd& from);

  inline ReqResetPasswd& operator=(const ReqResetPasswd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqResetPasswd& default_instance();

  static inline const ReqResetPasswd* internal_default_instance() {
    return reinterpret_cast<const ReqResetPasswd*>(
               &_ReqResetPasswd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ReqResetPasswd* other);

  // implements Message ----------------------------------------------

  inline ReqResetPasswd* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqResetPasswd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqResetPasswd& from);
  void MergeFrom(const ReqResetPasswd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqResetPasswd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 1;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string passwd = 3;
  void clear_passwd();
  static const int kPasswdFieldNumber = 3;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:qpcmd.ReqResetPasswd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  mutable int _cached_size_;
  friend struct protobuf_logon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RepRet

// int32 code = 1;
inline void RepRet::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 RepRet::code() const {
  // @@protoc_insertion_point(field_get:qpcmd.RepRet.code)
  return code_;
}
inline void RepRet::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.RepRet.code)
}

// string error = 2;
inline void RepRet::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepRet::error() const {
  // @@protoc_insertion_point(field_get:qpcmd.RepRet.error)
  return error_.GetNoArena();
}
inline void RepRet::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.RepRet.error)
}
#if LANG_CXX11
inline void RepRet::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.RepRet.error)
}
#endif
inline void RepRet::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.RepRet.error)
}
inline void RepRet::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.RepRet.error)
}
inline ::std::string* RepRet::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.RepRet.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepRet::release_error() {
  // @@protoc_insertion_point(field_release:qpcmd.RepRet.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepRet::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.RepRet.error)
}

// -------------------------------------------------------------------

// ReqRegisterCode

// string phone = 1;
inline void ReqRegisterCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterCode::phone() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterCode.phone)
  return phone_.GetNoArena();
}
inline void ReqRegisterCode::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterCode.phone)
}
#if LANG_CXX11
inline void ReqRegisterCode::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterCode.phone)
}
#endif
inline void ReqRegisterCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterCode.phone)
}
inline void ReqRegisterCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterCode.phone)
}
inline ::std::string* ReqRegisterCode::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterCode.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterCode::release_phone() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterCode.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterCode::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterCode.phone)
}

// -------------------------------------------------------------------

// ReqRegisterAccount

// int32 moduleID = 1;
inline void ReqRegisterAccount::clear_moduleid() {
  moduleid_ = 0;
}
inline ::google::protobuf::int32 ReqRegisterAccount::moduleid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.moduleID)
  return moduleid_;
}
inline void ReqRegisterAccount::set_moduleid(::google::protobuf::int32 value) {
  
  moduleid_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.moduleID)
}

// int32 plazaVersion = 2;
inline void ReqRegisterAccount::clear_plazaversion() {
  plazaversion_ = 0;
}
inline ::google::protobuf::int32 ReqRegisterAccount::plazaversion() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.plazaVersion)
  return plazaversion_;
}
inline void ReqRegisterAccount::set_plazaversion(::google::protobuf::int32 value) {
  
  plazaversion_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.plazaVersion)
}

// int32 deviceType = 3;
inline void ReqRegisterAccount::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 ReqRegisterAccount::devicetype() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.deviceType)
  return devicetype_;
}
inline void ReqRegisterAccount::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.deviceType)
}

// uint32 userID = 4;
inline void ReqRegisterAccount::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 ReqRegisterAccount::userid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.userID)
  return userid_;
}
inline void ReqRegisterAccount::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.userID)
}

// string logonPass = 5;
inline void ReqRegisterAccount::clear_logonpass() {
  logonpass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::logonpass() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.logonPass)
  return logonpass_.GetNoArena();
}
inline void ReqRegisterAccount::set_logonpass(const ::std::string& value) {
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.logonPass)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_logonpass(::std::string&& value) {
  
  logonpass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.logonPass)
}
#endif
inline void ReqRegisterAccount::set_logonpass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.logonPass)
}
inline void ReqRegisterAccount::set_logonpass(const char* value, size_t size) {
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.logonPass)
}
inline ::std::string* ReqRegisterAccount::mutable_logonpass() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.logonPass)
  return logonpass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_logonpass() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.logonPass)
  
  return logonpass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_logonpass(::std::string* logonpass) {
  if (logonpass != NULL) {
    
  } else {
    
  }
  logonpass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logonpass);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.logonPass)
}

// string account = 6;
inline void ReqRegisterAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::account() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.account)
  return account_.GetNoArena();
}
inline void ReqRegisterAccount::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.account)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.account)
}
#endif
inline void ReqRegisterAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.account)
}
inline void ReqRegisterAccount::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.account)
}
inline ::std::string* ReqRegisterAccount::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_account() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.account)
}

// string nickName = 7;
inline void ReqRegisterAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::nickname() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.nickName)
  return nickname_.GetNoArena();
}
inline void ReqRegisterAccount::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.nickName)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.nickName)
}
#endif
inline void ReqRegisterAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.nickName)
}
inline void ReqRegisterAccount::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.nickName)
}
inline ::std::string* ReqRegisterAccount::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.nickName)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.nickName)
}

// string spreaderCode = 8;
inline void ReqRegisterAccount::clear_spreadercode() {
  spreadercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::spreadercode() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.spreaderCode)
  return spreadercode_.GetNoArena();
}
inline void ReqRegisterAccount::set_spreadercode(const ::std::string& value) {
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.spreaderCode)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_spreadercode(::std::string&& value) {
  
  spreadercode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.spreaderCode)
}
#endif
inline void ReqRegisterAccount::set_spreadercode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.spreaderCode)
}
inline void ReqRegisterAccount::set_spreadercode(const char* value, size_t size) {
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.spreaderCode)
}
inline ::std::string* ReqRegisterAccount::mutable_spreadercode() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.spreaderCode)
  return spreadercode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_spreadercode() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.spreaderCode)
  
  return spreadercode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_spreadercode(::std::string* spreadercode) {
  if (spreadercode != NULL) {
    
  } else {
    
  }
  spreadercode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spreadercode);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.spreaderCode)
}

// string verifyCode = 9;
inline void ReqRegisterAccount::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::verifycode() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.verifyCode)
  return verifycode_.GetNoArena();
}
inline void ReqRegisterAccount::set_verifycode(const ::std::string& value) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.verifyCode)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_verifycode(::std::string&& value) {
  
  verifycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.verifyCode)
}
#endif
inline void ReqRegisterAccount::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.verifyCode)
}
inline void ReqRegisterAccount::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.verifyCode)
}
inline ::std::string* ReqRegisterAccount::mutable_verifycode() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.verifyCode)
  return verifycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_verifycode() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_verifycode(::std::string* verifycode) {
  if (verifycode != NULL) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.verifyCode)
}

// string machineID = 10;
inline void ReqRegisterAccount::clear_machineid() {
  machineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegisterAccount::machineid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.machineID)
  return machineid_.GetNoArena();
}
inline void ReqRegisterAccount::set_machineid(const ::std::string& value) {
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.machineID)
}
#if LANG_CXX11
inline void ReqRegisterAccount::set_machineid(::std::string&& value) {
  
  machineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.machineID)
}
#endif
inline void ReqRegisterAccount::set_machineid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.machineID)
}
inline void ReqRegisterAccount::set_machineid(const char* value, size_t size) {
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.machineID)
}
inline ::std::string* ReqRegisterAccount::mutable_machineid() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.machineID)
  return machineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegisterAccount::release_machineid() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.machineID)
  
  return machineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegisterAccount::set_allocated_machineid(::std::string* machineid) {
  if (machineid != NULL) {
    
  } else {
    
  }
  machineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machineid);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.machineID)
}

// -------------------------------------------------------------------

// ReqResetPasswd

// string phone = 1;
inline void ReqResetPasswd::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqResetPasswd::phone() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.phone)
  return phone_.GetNoArena();
}
inline void ReqResetPasswd::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.phone)
}
#if LANG_CXX11
inline void ReqResetPasswd::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.phone)
}
#endif
inline void ReqResetPasswd::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.phone)
}
inline void ReqResetPasswd::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.phone)
}
inline ::std::string* ReqResetPasswd::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqResetPasswd::release_phone() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqResetPasswd::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.phone)
}

// string code = 2;
inline void ReqResetPasswd::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqResetPasswd::code() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.code)
  return code_.GetNoArena();
}
inline void ReqResetPasswd::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.code)
}
#if LANG_CXX11
inline void ReqResetPasswd::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.code)
}
#endif
inline void ReqResetPasswd::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.code)
}
inline void ReqResetPasswd::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.code)
}
inline ::std::string* ReqResetPasswd::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqResetPasswd::release_code() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqResetPasswd::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.code)
}

// string passwd = 3;
inline void ReqResetPasswd::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqResetPasswd::passwd() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.passwd)
  return passwd_.GetNoArena();
}
inline void ReqResetPasswd::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.passwd)
}
#if LANG_CXX11
inline void ReqResetPasswd::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.passwd)
}
#endif
inline void ReqResetPasswd::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.passwd)
}
inline void ReqResetPasswd::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.passwd)
}
inline ::std::string* ReqResetPasswd::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqResetPasswd::release_passwd() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqResetPasswd::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.passwd)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qpcmd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_logon_2eproto__INCLUDED
