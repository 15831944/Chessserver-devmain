// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qpserver.proto

#ifndef PROTOBUF_qpserver_2eproto__INCLUDED
#define PROTOBUF_qpserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_qpserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRepRetImpl();
void InitDefaultsRepRet();
void InitDefaultsReqSendSmsImpl();
void InitDefaultsReqSendSms();
void InitDefaultsReqVerifySmsImpl();
void InitDefaultsReqVerifySms();
void InitDefaultsReqRegVerifyItemImpl();
void InitDefaultsReqRegVerifyItem();
void InitDefaultsReqUpdUserImpl();
void InitDefaultsReqUpdUser();
void InitDefaultsReqMapUserImpl();
void InitDefaultsReqMapUser();
void InitDefaultsReqInOutGameImpl();
void InitDefaultsReqInOutGame();
inline void InitDefaults() {
  InitDefaultsRepRet();
  InitDefaultsReqSendSms();
  InitDefaultsReqVerifySms();
  InitDefaultsReqRegVerifyItem();
  InitDefaultsReqUpdUser();
  InitDefaultsReqMapUser();
  InitDefaultsReqInOutGame();
}
}  // namespace protobuf_qpserver_2eproto
namespace qpserver {
class RepRet;
class RepRetDefaultTypeInternal;
extern RepRetDefaultTypeInternal _RepRet_default_instance_;
class ReqInOutGame;
class ReqInOutGameDefaultTypeInternal;
extern ReqInOutGameDefaultTypeInternal _ReqInOutGame_default_instance_;
class ReqMapUser;
class ReqMapUserDefaultTypeInternal;
extern ReqMapUserDefaultTypeInternal _ReqMapUser_default_instance_;
class ReqRegVerifyItem;
class ReqRegVerifyItemDefaultTypeInternal;
extern ReqRegVerifyItemDefaultTypeInternal _ReqRegVerifyItem_default_instance_;
class ReqSendSms;
class ReqSendSmsDefaultTypeInternal;
extern ReqSendSmsDefaultTypeInternal _ReqSendSms_default_instance_;
class ReqUpdUser;
class ReqUpdUserDefaultTypeInternal;
extern ReqUpdUserDefaultTypeInternal _ReqUpdUser_default_instance_;
class ReqVerifySms;
class ReqVerifySmsDefaultTypeInternal;
extern ReqVerifySmsDefaultTypeInternal _ReqVerifySms_default_instance_;
}  // namespace qpserver
namespace qpserver {

// ===================================================================

class RepRet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.RepRet) */ {
 public:
  RepRet();
  virtual ~RepRet();

  RepRet(const RepRet& from);

  inline RepRet& operator=(const RepRet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RepRet(RepRet&& from) noexcept
    : RepRet() {
    *this = ::std::move(from);
  }

  inline RepRet& operator=(RepRet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RepRet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepRet* internal_default_instance() {
    return reinterpret_cast<const RepRet*>(
               &_RepRet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RepRet* other);
  friend void swap(RepRet& a, RepRet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RepRet* New() const PROTOBUF_FINAL { return New(NULL); }

  RepRet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepRet& from);
  void MergeFrom(const RepRet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qpserver.RepRet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsRepRetImpl();
};
// -------------------------------------------------------------------

class ReqSendSms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqSendSms) */ {
 public:
  ReqSendSms();
  virtual ~ReqSendSms();

  ReqSendSms(const ReqSendSms& from);

  inline ReqSendSms& operator=(const ReqSendSms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqSendSms(ReqSendSms&& from) noexcept
    : ReqSendSms() {
    *this = ::std::move(from);
  }

  inline ReqSendSms& operator=(ReqSendSms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSendSms& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqSendSms* internal_default_instance() {
    return reinterpret_cast<const ReqSendSms*>(
               &_ReqSendSms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ReqSendSms* other);
  friend void swap(ReqSendSms& a, ReqSendSms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqSendSms* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqSendSms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqSendSms& from);
  void MergeFrom(const ReqSendSms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqSendSms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 2;
  void clear_phone();
  static const int kPhoneFieldNumber = 2;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // int32 kind = 1;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qpserver.ReqSendSms)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::int32 kind_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqSendSmsImpl();
};
// -------------------------------------------------------------------

class ReqVerifySms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqVerifySms) */ {
 public:
  ReqVerifySms();
  virtual ~ReqVerifySms();

  ReqVerifySms(const ReqVerifySms& from);

  inline ReqVerifySms& operator=(const ReqVerifySms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqVerifySms(ReqVerifySms&& from) noexcept
    : ReqVerifySms() {
    *this = ::std::move(from);
  }

  inline ReqVerifySms& operator=(ReqVerifySms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqVerifySms& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqVerifySms* internal_default_instance() {
    return reinterpret_cast<const ReqVerifySms*>(
               &_ReqVerifySms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ReqVerifySms* other);
  friend void swap(ReqVerifySms& a, ReqVerifySms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqVerifySms* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqVerifySms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqVerifySms& from);
  void MergeFrom(const ReqVerifySms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqVerifySms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 2;
  void clear_phone();
  static const int kPhoneFieldNumber = 2;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // int32 kind = 1;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // bool erase = 4;
  void clear_erase();
  static const int kEraseFieldNumber = 4;
  bool erase() const;
  void set_erase(bool value);

  // @@protoc_insertion_point(class_scope:qpserver.ReqVerifySms)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::int32 kind_;
  bool erase_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqVerifySmsImpl();
};
// -------------------------------------------------------------------

class ReqRegVerifyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqRegVerifyItem) */ {
 public:
  ReqRegVerifyItem();
  virtual ~ReqRegVerifyItem();

  ReqRegVerifyItem(const ReqRegVerifyItem& from);

  inline ReqRegVerifyItem& operator=(const ReqRegVerifyItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqRegVerifyItem(ReqRegVerifyItem&& from) noexcept
    : ReqRegVerifyItem() {
    *this = ::std::move(from);
  }

  inline ReqRegVerifyItem& operator=(ReqRegVerifyItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegVerifyItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqRegVerifyItem* internal_default_instance() {
    return reinterpret_cast<const ReqRegVerifyItem*>(
               &_ReqRegVerifyItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ReqRegVerifyItem* other);
  friend void swap(ReqRegVerifyItem& a, ReqRegVerifyItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqRegVerifyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRegVerifyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRegVerifyItem& from);
  void MergeFrom(const ReqRegVerifyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRegVerifyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 1;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:qpserver.ReqRegVerifyItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqRegVerifyItemImpl();
};
// -------------------------------------------------------------------

class ReqUpdUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqUpdUser) */ {
 public:
  ReqUpdUser();
  virtual ~ReqUpdUser();

  ReqUpdUser(const ReqUpdUser& from);

  inline ReqUpdUser& operator=(const ReqUpdUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqUpdUser(ReqUpdUser&& from) noexcept
    : ReqUpdUser() {
    *this = ::std::move(from);
  }

  inline ReqUpdUser& operator=(ReqUpdUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUpdUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqUpdUser* internal_default_instance() {
    return reinterpret_cast<const ReqUpdUser*>(
               &_ReqUpdUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ReqUpdUser* other);
  friend void swap(ReqUpdUser& a, ReqUpdUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqUpdUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqUpdUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqUpdUser& from);
  void MergeFrom(const ReqUpdUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqUpdUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 4;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string machine = 5;
  void clear_machine();
  static const int kMachineFieldNumber = 5;
  const ::std::string& machine() const;
  void set_machine(const ::std::string& value);
  #if LANG_CXX11
  void set_machine(::std::string&& value);
  #endif
  void set_machine(const char* value);
  void set_machine(const char* value, size_t size);
  ::std::string* mutable_machine();
  ::std::string* release_machine();
  void set_allocated_machine(::std::string* machine);

  // string nickname = 6;
  void clear_nickname();
  static const int kNicknameFieldNumber = 6;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int32 user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  ::google::protobuf::int32 user() const;
  void set_user(::google::protobuf::int32 value);

  // int32 spreader = 2;
  void clear_spreader();
  static const int kSpreaderFieldNumber = 2;
  ::google::protobuf::int32 spreader() const;
  void set_spreader(::google::protobuf::int32 value);

  // int32 rebate = 3;
  void clear_rebate();
  static const int kRebateFieldNumber = 3;
  ::google::protobuf::int32 rebate() const;
  void set_rebate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qpserver.ReqUpdUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr machine_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 user_;
  ::google::protobuf::int32 spreader_;
  ::google::protobuf::int32 rebate_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqUpdUserImpl();
};
// -------------------------------------------------------------------

class ReqMapUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqMapUser) */ {
 public:
  ReqMapUser();
  virtual ~ReqMapUser();

  ReqMapUser(const ReqMapUser& from);

  inline ReqMapUser& operator=(const ReqMapUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqMapUser(ReqMapUser&& from) noexcept
    : ReqMapUser() {
    *this = ::std::move(from);
  }

  inline ReqMapUser& operator=(ReqMapUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMapUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqMapUser* internal_default_instance() {
    return reinterpret_cast<const ReqMapUser*>(
               &_ReqMapUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ReqMapUser* other);
  friend void swap(ReqMapUser& a, ReqMapUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqMapUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqMapUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqMapUser& from);
  void MergeFrom(const ReqMapUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqMapUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone = 2;
  void clear_phone();
  static const int kPhoneFieldNumber = 2;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string third = 3;
  void clear_third();
  static const int kThirdFieldNumber = 3;
  const ::std::string& third() const;
  void set_third(const ::std::string& value);
  #if LANG_CXX11
  void set_third(::std::string&& value);
  #endif
  void set_third(const char* value);
  void set_third(const char* value, size_t size);
  ::std::string* mutable_third();
  ::std::string* release_third();
  void set_allocated_third(::std::string* third);

  // int32 user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  ::google::protobuf::int32 user() const;
  void set_user(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qpserver.ReqMapUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr third_;
  ::google::protobuf::int32 user_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqMapUserImpl();
};
// -------------------------------------------------------------------

class ReqInOutGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qpserver.ReqInOutGame) */ {
 public:
  ReqInOutGame();
  virtual ~ReqInOutGame();

  ReqInOutGame(const ReqInOutGame& from);

  inline ReqInOutGame& operator=(const ReqInOutGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqInOutGame(ReqInOutGame&& from) noexcept
    : ReqInOutGame() {
    *this = ::std::move(from);
  }

  inline ReqInOutGame& operator=(ReqInOutGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInOutGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqInOutGame* internal_default_instance() {
    return reinterpret_cast<const ReqInOutGame*>(
               &_ReqInOutGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ReqInOutGame* other);
  friend void swap(ReqInOutGame& a, ReqInOutGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqInOutGame* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqInOutGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqInOutGame& from);
  void MergeFrom(const ReqInOutGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqInOutGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 7;
  void clear_nickname();
  static const int kNicknameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int32 user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  ::google::protobuf::int32 user() const;
  void set_user(::google::protobuf::int32 value);

  // int32 game = 2;
  void clear_game();
  static const int kGameFieldNumber = 2;
  ::google::protobuf::int32 game() const;
  void set_game(::google::protobuf::int32 value);

  // int32 face = 3;
  void clear_face();
  static const int kFaceFieldNumber = 3;
  ::google::protobuf::int32 face() const;
  void set_face(::google::protobuf::int32 value);

  // int32 playtime = 4;
  void clear_playtime();
  static const int kPlaytimeFieldNumber = 4;
  ::google::protobuf::int32 playtime() const;
  void set_playtime(::google::protobuf::int32 value);

  // int64 vscore = 5;
  void clear_vscore();
  static const int kVscoreFieldNumber = 5;
  ::google::protobuf::int64 vscore() const;
  void set_vscore(::google::protobuf::int64 value);

  // int64 tax = 6;
  void clear_tax();
  static const int kTaxFieldNumber = 6;
  ::google::protobuf::int64 tax() const;
  void set_tax(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:qpserver.ReqInOutGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 user_;
  ::google::protobuf::int32 game_;
  ::google::protobuf::int32 face_;
  ::google::protobuf::int32 playtime_;
  ::google::protobuf::int64 vscore_;
  ::google::protobuf::int64 tax_;
  mutable int _cached_size_;
  friend struct ::protobuf_qpserver_2eproto::TableStruct;
  friend void ::protobuf_qpserver_2eproto::InitDefaultsReqInOutGameImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RepRet

// int32 code = 1;
inline void RepRet::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 RepRet::code() const {
  // @@protoc_insertion_point(field_get:qpserver.RepRet.code)
  return code_;
}
inline void RepRet::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:qpserver.RepRet.code)
}

// string error = 2;
inline void RepRet::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepRet::error() const {
  // @@protoc_insertion_point(field_get:qpserver.RepRet.error)
  return error_.GetNoArena();
}
inline void RepRet::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.RepRet.error)
}
#if LANG_CXX11
inline void RepRet::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.RepRet.error)
}
#endif
inline void RepRet::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.RepRet.error)
}
inline void RepRet::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.RepRet.error)
}
inline ::std::string* RepRet::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.RepRet.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepRet::release_error() {
  // @@protoc_insertion_point(field_release:qpserver.RepRet.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepRet::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:qpserver.RepRet.error)
}

// -------------------------------------------------------------------

// ReqSendSms

// int32 kind = 1;
inline void ReqSendSms::clear_kind() {
  kind_ = 0;
}
inline ::google::protobuf::int32 ReqSendSms::kind() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqSendSms.kind)
  return kind_;
}
inline void ReqSendSms::set_kind(::google::protobuf::int32 value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqSendSms.kind)
}

// string phone = 2;
inline void ReqSendSms::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqSendSms::phone() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqSendSms.phone)
  return phone_.GetNoArena();
}
inline void ReqSendSms::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqSendSms.phone)
}
#if LANG_CXX11
inline void ReqSendSms::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqSendSms.phone)
}
#endif
inline void ReqSendSms::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqSendSms.phone)
}
inline void ReqSendSms::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqSendSms.phone)
}
inline ::std::string* ReqSendSms::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqSendSms.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqSendSms::release_phone() {
  // @@protoc_insertion_point(field_release:qpserver.ReqSendSms.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqSendSms::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqSendSms.phone)
}

// -------------------------------------------------------------------

// ReqVerifySms

// int32 kind = 1;
inline void ReqVerifySms::clear_kind() {
  kind_ = 0;
}
inline ::google::protobuf::int32 ReqVerifySms::kind() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqVerifySms.kind)
  return kind_;
}
inline void ReqVerifySms::set_kind(::google::protobuf::int32 value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqVerifySms.kind)
}

// string phone = 2;
inline void ReqVerifySms::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqVerifySms::phone() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqVerifySms.phone)
  return phone_.GetNoArena();
}
inline void ReqVerifySms::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqVerifySms.phone)
}
#if LANG_CXX11
inline void ReqVerifySms::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqVerifySms.phone)
}
#endif
inline void ReqVerifySms::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqVerifySms.phone)
}
inline void ReqVerifySms::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqVerifySms.phone)
}
inline ::std::string* ReqVerifySms::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqVerifySms.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqVerifySms::release_phone() {
  // @@protoc_insertion_point(field_release:qpserver.ReqVerifySms.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqVerifySms::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqVerifySms.phone)
}

// string code = 3;
inline void ReqVerifySms::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqVerifySms::code() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqVerifySms.code)
  return code_.GetNoArena();
}
inline void ReqVerifySms::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqVerifySms.code)
}
#if LANG_CXX11
inline void ReqVerifySms::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqVerifySms.code)
}
#endif
inline void ReqVerifySms::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqVerifySms.code)
}
inline void ReqVerifySms::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqVerifySms.code)
}
inline ::std::string* ReqVerifySms::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqVerifySms.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqVerifySms::release_code() {
  // @@protoc_insertion_point(field_release:qpserver.ReqVerifySms.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqVerifySms::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqVerifySms.code)
}

// bool erase = 4;
inline void ReqVerifySms::clear_erase() {
  erase_ = false;
}
inline bool ReqVerifySms::erase() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqVerifySms.erase)
  return erase_;
}
inline void ReqVerifySms::set_erase(bool value) {
  
  erase_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqVerifySms.erase)
}

// -------------------------------------------------------------------

// ReqRegVerifyItem

// string phone = 1;
inline void ReqRegVerifyItem::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegVerifyItem::phone() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqRegVerifyItem.phone)
  return phone_.GetNoArena();
}
inline void ReqRegVerifyItem::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqRegVerifyItem.phone)
}
#if LANG_CXX11
inline void ReqRegVerifyItem::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqRegVerifyItem.phone)
}
#endif
inline void ReqRegVerifyItem::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqRegVerifyItem.phone)
}
inline void ReqRegVerifyItem::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqRegVerifyItem.phone)
}
inline ::std::string* ReqRegVerifyItem::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqRegVerifyItem.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegVerifyItem::release_phone() {
  // @@protoc_insertion_point(field_release:qpserver.ReqRegVerifyItem.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegVerifyItem::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqRegVerifyItem.phone)
}

// string code = 2;
inline void ReqRegVerifyItem::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegVerifyItem::code() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqRegVerifyItem.code)
  return code_.GetNoArena();
}
inline void ReqRegVerifyItem::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqRegVerifyItem.code)
}
#if LANG_CXX11
inline void ReqRegVerifyItem::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqRegVerifyItem.code)
}
#endif
inline void ReqRegVerifyItem::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqRegVerifyItem.code)
}
inline void ReqRegVerifyItem::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqRegVerifyItem.code)
}
inline ::std::string* ReqRegVerifyItem::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqRegVerifyItem.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegVerifyItem::release_code() {
  // @@protoc_insertion_point(field_release:qpserver.ReqRegVerifyItem.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegVerifyItem::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqRegVerifyItem.code)
}

// string nickname = 3;
inline void ReqRegVerifyItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegVerifyItem::nickname() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqRegVerifyItem.nickname)
  return nickname_.GetNoArena();
}
inline void ReqRegVerifyItem::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqRegVerifyItem.nickname)
}
#if LANG_CXX11
inline void ReqRegVerifyItem::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqRegVerifyItem.nickname)
}
#endif
inline void ReqRegVerifyItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqRegVerifyItem.nickname)
}
inline void ReqRegVerifyItem::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqRegVerifyItem.nickname)
}
inline ::std::string* ReqRegVerifyItem::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqRegVerifyItem.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegVerifyItem::release_nickname() {
  // @@protoc_insertion_point(field_release:qpserver.ReqRegVerifyItem.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegVerifyItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqRegVerifyItem.nickname)
}

// -------------------------------------------------------------------

// ReqUpdUser

// int32 user = 1;
inline void ReqUpdUser::clear_user() {
  user_ = 0;
}
inline ::google::protobuf::int32 ReqUpdUser::user() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.user)
  return user_;
}
inline void ReqUpdUser::set_user(::google::protobuf::int32 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.user)
}

// int32 spreader = 2;
inline void ReqUpdUser::clear_spreader() {
  spreader_ = 0;
}
inline ::google::protobuf::int32 ReqUpdUser::spreader() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.spreader)
  return spreader_;
}
inline void ReqUpdUser::set_spreader(::google::protobuf::int32 value) {
  
  spreader_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.spreader)
}

// int32 rebate = 3;
inline void ReqUpdUser::clear_rebate() {
  rebate_ = 0;
}
inline ::google::protobuf::int32 ReqUpdUser::rebate() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.rebate)
  return rebate_;
}
inline void ReqUpdUser::set_rebate(::google::protobuf::int32 value) {
  
  rebate_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.rebate)
}

// string phone = 4;
inline void ReqUpdUser::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUpdUser::phone() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.phone)
  return phone_.GetNoArena();
}
inline void ReqUpdUser::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.phone)
}
#if LANG_CXX11
inline void ReqUpdUser::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqUpdUser.phone)
}
#endif
inline void ReqUpdUser::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqUpdUser.phone)
}
inline void ReqUpdUser::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqUpdUser.phone)
}
inline ::std::string* ReqUpdUser::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqUpdUser.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUpdUser::release_phone() {
  // @@protoc_insertion_point(field_release:qpserver.ReqUpdUser.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUpdUser::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqUpdUser.phone)
}

// string machine = 5;
inline void ReqUpdUser::clear_machine() {
  machine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUpdUser::machine() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.machine)
  return machine_.GetNoArena();
}
inline void ReqUpdUser::set_machine(const ::std::string& value) {
  
  machine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.machine)
}
#if LANG_CXX11
inline void ReqUpdUser::set_machine(::std::string&& value) {
  
  machine_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqUpdUser.machine)
}
#endif
inline void ReqUpdUser::set_machine(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  machine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqUpdUser.machine)
}
inline void ReqUpdUser::set_machine(const char* value, size_t size) {
  
  machine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqUpdUser.machine)
}
inline ::std::string* ReqUpdUser::mutable_machine() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqUpdUser.machine)
  return machine_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUpdUser::release_machine() {
  // @@protoc_insertion_point(field_release:qpserver.ReqUpdUser.machine)
  
  return machine_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUpdUser::set_allocated_machine(::std::string* machine) {
  if (machine != NULL) {
    
  } else {
    
  }
  machine_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqUpdUser.machine)
}

// string nickname = 6;
inline void ReqUpdUser::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUpdUser::nickname() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqUpdUser.nickname)
  return nickname_.GetNoArena();
}
inline void ReqUpdUser::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqUpdUser.nickname)
}
#if LANG_CXX11
inline void ReqUpdUser::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqUpdUser.nickname)
}
#endif
inline void ReqUpdUser::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqUpdUser.nickname)
}
inline void ReqUpdUser::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqUpdUser.nickname)
}
inline ::std::string* ReqUpdUser::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqUpdUser.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUpdUser::release_nickname() {
  // @@protoc_insertion_point(field_release:qpserver.ReqUpdUser.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUpdUser::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqUpdUser.nickname)
}

// -------------------------------------------------------------------

// ReqMapUser

// int32 user = 1;
inline void ReqMapUser::clear_user() {
  user_ = 0;
}
inline ::google::protobuf::int32 ReqMapUser::user() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqMapUser.user)
  return user_;
}
inline void ReqMapUser::set_user(::google::protobuf::int32 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqMapUser.user)
}

// string phone = 2;
inline void ReqMapUser::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqMapUser::phone() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqMapUser.phone)
  return phone_.GetNoArena();
}
inline void ReqMapUser::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqMapUser.phone)
}
#if LANG_CXX11
inline void ReqMapUser::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqMapUser.phone)
}
#endif
inline void ReqMapUser::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqMapUser.phone)
}
inline void ReqMapUser::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqMapUser.phone)
}
inline ::std::string* ReqMapUser::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqMapUser.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqMapUser::release_phone() {
  // @@protoc_insertion_point(field_release:qpserver.ReqMapUser.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqMapUser::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqMapUser.phone)
}

// string third = 3;
inline void ReqMapUser::clear_third() {
  third_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqMapUser::third() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqMapUser.third)
  return third_.GetNoArena();
}
inline void ReqMapUser::set_third(const ::std::string& value) {
  
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqMapUser.third)
}
#if LANG_CXX11
inline void ReqMapUser::set_third(::std::string&& value) {
  
  third_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqMapUser.third)
}
#endif
inline void ReqMapUser::set_third(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqMapUser.third)
}
inline void ReqMapUser::set_third(const char* value, size_t size) {
  
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqMapUser.third)
}
inline ::std::string* ReqMapUser::mutable_third() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqMapUser.third)
  return third_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqMapUser::release_third() {
  // @@protoc_insertion_point(field_release:qpserver.ReqMapUser.third)
  
  return third_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqMapUser::set_allocated_third(::std::string* third) {
  if (third != NULL) {
    
  } else {
    
  }
  third_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), third);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqMapUser.third)
}

// -------------------------------------------------------------------

// ReqInOutGame

// int32 user = 1;
inline void ReqInOutGame::clear_user() {
  user_ = 0;
}
inline ::google::protobuf::int32 ReqInOutGame::user() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.user)
  return user_;
}
inline void ReqInOutGame::set_user(::google::protobuf::int32 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.user)
}

// int32 game = 2;
inline void ReqInOutGame::clear_game() {
  game_ = 0;
}
inline ::google::protobuf::int32 ReqInOutGame::game() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.game)
  return game_;
}
inline void ReqInOutGame::set_game(::google::protobuf::int32 value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.game)
}

// int32 face = 3;
inline void ReqInOutGame::clear_face() {
  face_ = 0;
}
inline ::google::protobuf::int32 ReqInOutGame::face() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.face)
  return face_;
}
inline void ReqInOutGame::set_face(::google::protobuf::int32 value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.face)
}

// int32 playtime = 4;
inline void ReqInOutGame::clear_playtime() {
  playtime_ = 0;
}
inline ::google::protobuf::int32 ReqInOutGame::playtime() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.playtime)
  return playtime_;
}
inline void ReqInOutGame::set_playtime(::google::protobuf::int32 value) {
  
  playtime_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.playtime)
}

// int64 vscore = 5;
inline void ReqInOutGame::clear_vscore() {
  vscore_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqInOutGame::vscore() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.vscore)
  return vscore_;
}
inline void ReqInOutGame::set_vscore(::google::protobuf::int64 value) {
  
  vscore_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.vscore)
}

// int64 tax = 6;
inline void ReqInOutGame::clear_tax() {
  tax_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqInOutGame::tax() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.tax)
  return tax_;
}
inline void ReqInOutGame::set_tax(::google::protobuf::int64 value) {
  
  tax_ = value;
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.tax)
}

// string nickname = 7;
inline void ReqInOutGame::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqInOutGame::nickname() const {
  // @@protoc_insertion_point(field_get:qpserver.ReqInOutGame.nickname)
  return nickname_.GetNoArena();
}
inline void ReqInOutGame::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpserver.ReqInOutGame.nickname)
}
#if LANG_CXX11
inline void ReqInOutGame::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpserver.ReqInOutGame.nickname)
}
#endif
inline void ReqInOutGame::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpserver.ReqInOutGame.nickname)
}
inline void ReqInOutGame::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpserver.ReqInOutGame.nickname)
}
inline ::std::string* ReqInOutGame::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:qpserver.ReqInOutGame.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqInOutGame::release_nickname() {
  // @@protoc_insertion_point(field_release:qpserver.ReqInOutGame.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqInOutGame::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:qpserver.ReqInOutGame.nickname)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace qpserver

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_qpserver_2eproto__INCLUDED
