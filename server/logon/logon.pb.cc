// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "logon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qpcmd {
class RepRetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RepRet> {
} _RepRet_default_instance_;
class ReqRegisterCodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqRegisterCode> {
} _ReqRegisterCode_default_instance_;
class ReqRegisterAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqRegisterAccount> {
} _ReqRegisterAccount_default_instance_;
class ReqResetPasswdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqResetPasswd> {
} _ReqResetPasswd_default_instance_;

namespace protobuf_logon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepRet, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepRet, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterCode, phone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, moduleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, plazaversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, logonpass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, spreadercode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, verifycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegisterAccount, machineid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqResetPasswd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqResetPasswd, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqResetPasswd, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqResetPasswd, passwd_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RepRet)},
  { 7, -1, sizeof(ReqRegisterCode)},
  { 13, -1, sizeof(ReqRegisterAccount)},
  { 28, -1, sizeof(ReqResetPasswd)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RepRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqRegisterCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqRegisterAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqResetPasswd_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "logon.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _RepRet_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ReqRegisterCode_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ReqRegisterAccount_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ReqResetPasswd_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RepRet_default_instance_.DefaultConstruct();
  _ReqRegisterCode_default_instance_.DefaultConstruct();
  _ReqRegisterAccount_default_instance_.DefaultConstruct();
  _ReqResetPasswd_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013logon.proto\022\005qpcmd\"%\n\006RepRet\022\014\n\004code\030\001"
      " \001(\005\022\r\n\005error\030\002 \001(\t\" \n\017ReqRegisterCode\022\r"
      "\n\005phone\030\001 \001(\t\"\323\001\n\022ReqRegisterAccount\022\020\n\010"
      "moduleID\030\001 \001(\005\022\024\n\014plazaVersion\030\002 \001(\005\022\022\n\n"
      "deviceType\030\003 \001(\005\022\016\n\006userID\030\004 \001(\r\022\021\n\tlogo"
      "nPass\030\005 \001(\t\022\017\n\007account\030\006 \001(\t\022\020\n\010nickName"
      "\030\007 \001(\t\022\024\n\014spreaderCode\030\010 \001(\t\022\022\n\nverifyCo"
      "de\030\t \001(\t\022\021\n\tmachineID\030\n \001(\t\"=\n\016ReqResetP"
      "asswd\022\r\n\005phone\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\016\n\006pa"
      "sswd\030\003 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 378);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "logon.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_logon_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepRet::kCodeFieldNumber;
const int RepRet::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepRet::RepRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_logon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpcmd.RepRet)
}
RepRet::RepRet(const RepRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:qpcmd.RepRet)
}

void RepRet::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

RepRet::~RepRet() {
  // @@protoc_insertion_point(destructor:qpcmd.RepRet)
  SharedDtor();
}

void RepRet::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RepRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepRet::descriptor() {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepRet& RepRet::default_instance() {
  protobuf_logon_2eproto::InitDefaults();
  return *internal_default_instance();
}

RepRet* RepRet::New(::google::protobuf::Arena* arena) const {
  RepRet* n = new RepRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepRet::Clear() {
// @@protoc_insertion_point(message_clear_start:qpcmd.RepRet)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

bool RepRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpcmd.RepRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.RepRet.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpcmd.RepRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpcmd.RepRet)
  return false;
#undef DO_
}

void RepRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpcmd.RepRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.RepRet.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:qpcmd.RepRet)
}

::google::protobuf::uint8* RepRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qpcmd.RepRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.RepRet.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qpcmd.RepRet)
  return target;
}

size_t RepRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpcmd.RepRet)
  size_t total_size = 0;

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpcmd.RepRet)
  GOOGLE_DCHECK_NE(&from, this);
  const RepRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpcmd.RepRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpcmd.RepRet)
    MergeFrom(*source);
  }
}

void RepRet::MergeFrom(const RepRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpcmd.RepRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void RepRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpcmd.RepRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepRet::CopyFrom(const RepRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpcmd.RepRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepRet::IsInitialized() const {
  return true;
}

void RepRet::Swap(RepRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepRet::InternalSwap(RepRet* other) {
  error_.Swap(&other->error_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepRet::GetMetadata() const {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepRet

// int32 code = 1;
void RepRet::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 RepRet::code() const {
  // @@protoc_insertion_point(field_get:qpcmd.RepRet.code)
  return code_;
}
void RepRet::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.RepRet.code)
}

// string error = 2;
void RepRet::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RepRet::error() const {
  // @@protoc_insertion_point(field_get:qpcmd.RepRet.error)
  return error_.GetNoArena();
}
void RepRet::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.RepRet.error)
}
#if LANG_CXX11
void RepRet::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.RepRet.error)
}
#endif
void RepRet::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.RepRet.error)
}
void RepRet::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.RepRet.error)
}
::std::string* RepRet::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.RepRet.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepRet::release_error() {
  // @@protoc_insertion_point(field_release:qpcmd.RepRet.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RepRet::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.RepRet.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegisterCode::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegisterCode::ReqRegisterCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_logon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpcmd.ReqRegisterCode)
}
ReqRegisterCode::ReqRegisterCode(const ReqRegisterCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  // @@protoc_insertion_point(copy_constructor:qpcmd.ReqRegisterCode)
}

void ReqRegisterCode::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReqRegisterCode::~ReqRegisterCode() {
  // @@protoc_insertion_point(destructor:qpcmd.ReqRegisterCode)
  SharedDtor();
}

void ReqRegisterCode::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRegisterCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRegisterCode::descriptor() {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRegisterCode& ReqRegisterCode::default_instance() {
  protobuf_logon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqRegisterCode* ReqRegisterCode::New(::google::protobuf::Arena* arena) const {
  ReqRegisterCode* n = new ReqRegisterCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqRegisterCode::Clear() {
// @@protoc_insertion_point(message_clear_start:qpcmd.ReqRegisterCode)
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqRegisterCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpcmd.ReqRegisterCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string phone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterCode.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpcmd.ReqRegisterCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpcmd.ReqRegisterCode)
  return false;
#undef DO_
}

void ReqRegisterCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpcmd.ReqRegisterCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterCode.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone(), output);
  }

  // @@protoc_insertion_point(serialize_end:qpcmd.ReqRegisterCode)
}

::google::protobuf::uint8* ReqRegisterCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qpcmd.ReqRegisterCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterCode.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qpcmd.ReqRegisterCode)
  return target;
}

size_t ReqRegisterCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpcmd.ReqRegisterCode)
  size_t total_size = 0;

  // string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRegisterCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpcmd.ReqRegisterCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRegisterCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegisterCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpcmd.ReqRegisterCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpcmd.ReqRegisterCode)
    MergeFrom(*source);
  }
}

void ReqRegisterCode::MergeFrom(const ReqRegisterCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpcmd.ReqRegisterCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
}

void ReqRegisterCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpcmd.ReqRegisterCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegisterCode::CopyFrom(const ReqRegisterCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpcmd.ReqRegisterCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegisterCode::IsInitialized() const {
  return true;
}

void ReqRegisterCode::Swap(ReqRegisterCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegisterCode::InternalSwap(ReqRegisterCode* other) {
  phone_.Swap(&other->phone_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqRegisterCode::GetMetadata() const {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRegisterCode

// string phone = 1;
void ReqRegisterCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterCode::phone() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterCode.phone)
  return phone_.GetNoArena();
}
void ReqRegisterCode::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterCode.phone)
}
#if LANG_CXX11
void ReqRegisterCode::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterCode.phone)
}
#endif
void ReqRegisterCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterCode.phone)
}
void ReqRegisterCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterCode.phone)
}
::std::string* ReqRegisterCode::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterCode.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterCode::release_phone() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterCode.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterCode::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterCode.phone)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegisterAccount::kModuleIDFieldNumber;
const int ReqRegisterAccount::kPlazaVersionFieldNumber;
const int ReqRegisterAccount::kDeviceTypeFieldNumber;
const int ReqRegisterAccount::kUserIDFieldNumber;
const int ReqRegisterAccount::kLogonPassFieldNumber;
const int ReqRegisterAccount::kAccountFieldNumber;
const int ReqRegisterAccount::kNickNameFieldNumber;
const int ReqRegisterAccount::kSpreaderCodeFieldNumber;
const int ReqRegisterAccount::kVerifyCodeFieldNumber;
const int ReqRegisterAccount::kMachineIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegisterAccount::ReqRegisterAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_logon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpcmd.ReqRegisterAccount)
}
ReqRegisterAccount::ReqRegisterAccount(const ReqRegisterAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logonpass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logonpass().size() > 0) {
    logonpass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logonpass_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  spreadercode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spreadercode().size() > 0) {
    spreadercode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spreadercode_);
  }
  verifycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verifycode().size() > 0) {
    verifycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycode_);
  }
  machineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machineid().size() > 0) {
    machineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machineid_);
  }
  ::memcpy(&moduleid_, &from.moduleid_,
    reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&moduleid_) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:qpcmd.ReqRegisterAccount)
}

void ReqRegisterAccount::SharedCtor() {
  logonpass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spreadercode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&moduleid_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&moduleid_) + sizeof(userid_));
  _cached_size_ = 0;
}

ReqRegisterAccount::~ReqRegisterAccount() {
  // @@protoc_insertion_point(destructor:qpcmd.ReqRegisterAccount)
  SharedDtor();
}

void ReqRegisterAccount::SharedDtor() {
  logonpass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spreadercode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machineid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqRegisterAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRegisterAccount::descriptor() {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRegisterAccount& ReqRegisterAccount::default_instance() {
  protobuf_logon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqRegisterAccount* ReqRegisterAccount::New(::google::protobuf::Arena* arena) const {
  ReqRegisterAccount* n = new ReqRegisterAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqRegisterAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:qpcmd.ReqRegisterAccount)
  logonpass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spreadercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&moduleid_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&moduleid_) + sizeof(userid_));
}

bool ReqRegisterAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpcmd.ReqRegisterAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 moduleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moduleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 plazaVersion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &plazaversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deviceType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 userID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logonPass = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logonpass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logonpass().data(), this->logonpass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.logonPass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.nickName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spreaderCode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spreadercode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spreadercode().data(), this->spreadercode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.spreaderCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verifyCode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifycode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verifycode().data(), this->verifycode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.verifyCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machineID = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machineid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machineid().data(), this->machineid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqRegisterAccount.machineID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpcmd.ReqRegisterAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpcmd.ReqRegisterAccount)
  return false;
#undef DO_
}

void ReqRegisterAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpcmd.ReqRegisterAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 moduleID = 1;
  if (this->moduleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->moduleid(), output);
  }

  // int32 plazaVersion = 2;
  if (this->plazaversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->plazaversion(), output);
  }

  // int32 deviceType = 3;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->devicetype(), output);
  }

  // uint32 userID = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->userid(), output);
  }

  // string logonPass = 5;
  if (this->logonpass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logonpass().data(), this->logonpass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.logonPass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logonpass(), output);
  }

  // string account = 6;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account(), output);
  }

  // string nickName = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nickname(), output);
  }

  // string spreaderCode = 8;
  if (this->spreadercode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spreadercode().data(), this->spreadercode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.spreaderCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->spreadercode(), output);
  }

  // string verifyCode = 9;
  if (this->verifycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifycode().data(), this->verifycode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.verifyCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->verifycode(), output);
  }

  // string machineID = 10;
  if (this->machineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machineid().data(), this->machineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.machineID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->machineid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qpcmd.ReqRegisterAccount)
}

::google::protobuf::uint8* ReqRegisterAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qpcmd.ReqRegisterAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 moduleID = 1;
  if (this->moduleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->moduleid(), target);
  }

  // int32 plazaVersion = 2;
  if (this->plazaversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->plazaversion(), target);
  }

  // int32 deviceType = 3;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->devicetype(), target);
  }

  // uint32 userID = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->userid(), target);
  }

  // string logonPass = 5;
  if (this->logonpass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logonpass().data(), this->logonpass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.logonPass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logonpass(), target);
  }

  // string account = 6;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account(), target);
  }

  // string nickName = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nickname(), target);
  }

  // string spreaderCode = 8;
  if (this->spreadercode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spreadercode().data(), this->spreadercode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.spreaderCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->spreadercode(), target);
  }

  // string verifyCode = 9;
  if (this->verifycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifycode().data(), this->verifycode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.verifyCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->verifycode(), target);
  }

  // string machineID = 10;
  if (this->machineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machineid().data(), this->machineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqRegisterAccount.machineID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->machineid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qpcmd.ReqRegisterAccount)
  return target;
}

size_t ReqRegisterAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpcmd.ReqRegisterAccount)
  size_t total_size = 0;

  // string logonPass = 5;
  if (this->logonpass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logonpass());
  }

  // string account = 6;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string nickName = 7;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string spreaderCode = 8;
  if (this->spreadercode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spreadercode());
  }

  // string verifyCode = 9;
  if (this->verifycode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifycode());
  }

  // string machineID = 10;
  if (this->machineid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machineid());
  }

  // int32 moduleID = 1;
  if (this->moduleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->moduleid());
  }

  // int32 plazaVersion = 2;
  if (this->plazaversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->plazaversion());
  }

  // int32 deviceType = 3;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  // uint32 userID = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRegisterAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpcmd.ReqRegisterAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRegisterAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegisterAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpcmd.ReqRegisterAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpcmd.ReqRegisterAccount)
    MergeFrom(*source);
  }
}

void ReqRegisterAccount::MergeFrom(const ReqRegisterAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpcmd.ReqRegisterAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.logonpass().size() > 0) {

    logonpass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logonpass_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.spreadercode().size() > 0) {

    spreadercode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spreadercode_);
  }
  if (from.verifycode().size() > 0) {

    verifycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycode_);
  }
  if (from.machineid().size() > 0) {

    machineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machineid_);
  }
  if (from.moduleid() != 0) {
    set_moduleid(from.moduleid());
  }
  if (from.plazaversion() != 0) {
    set_plazaversion(from.plazaversion());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void ReqRegisterAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpcmd.ReqRegisterAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegisterAccount::CopyFrom(const ReqRegisterAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpcmd.ReqRegisterAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegisterAccount::IsInitialized() const {
  return true;
}

void ReqRegisterAccount::Swap(ReqRegisterAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegisterAccount::InternalSwap(ReqRegisterAccount* other) {
  logonpass_.Swap(&other->logonpass_);
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  spreadercode_.Swap(&other->spreadercode_);
  verifycode_.Swap(&other->verifycode_);
  machineid_.Swap(&other->machineid_);
  std::swap(moduleid_, other->moduleid_);
  std::swap(plazaversion_, other->plazaversion_);
  std::swap(devicetype_, other->devicetype_);
  std::swap(userid_, other->userid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqRegisterAccount::GetMetadata() const {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRegisterAccount

// int32 moduleID = 1;
void ReqRegisterAccount::clear_moduleid() {
  moduleid_ = 0;
}
::google::protobuf::int32 ReqRegisterAccount::moduleid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.moduleID)
  return moduleid_;
}
void ReqRegisterAccount::set_moduleid(::google::protobuf::int32 value) {
  
  moduleid_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.moduleID)
}

// int32 plazaVersion = 2;
void ReqRegisterAccount::clear_plazaversion() {
  plazaversion_ = 0;
}
::google::protobuf::int32 ReqRegisterAccount::plazaversion() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.plazaVersion)
  return plazaversion_;
}
void ReqRegisterAccount::set_plazaversion(::google::protobuf::int32 value) {
  
  plazaversion_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.plazaVersion)
}

// int32 deviceType = 3;
void ReqRegisterAccount::clear_devicetype() {
  devicetype_ = 0;
}
::google::protobuf::int32 ReqRegisterAccount::devicetype() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.deviceType)
  return devicetype_;
}
void ReqRegisterAccount::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.deviceType)
}

// uint32 userID = 4;
void ReqRegisterAccount::clear_userid() {
  userid_ = 0u;
}
::google::protobuf::uint32 ReqRegisterAccount::userid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.userID)
  return userid_;
}
void ReqRegisterAccount::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.userID)
}

// string logonPass = 5;
void ReqRegisterAccount::clear_logonpass() {
  logonpass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::logonpass() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.logonPass)
  return logonpass_.GetNoArena();
}
void ReqRegisterAccount::set_logonpass(const ::std::string& value) {
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.logonPass)
}
#if LANG_CXX11
void ReqRegisterAccount::set_logonpass(::std::string&& value) {
  
  logonpass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.logonPass)
}
#endif
void ReqRegisterAccount::set_logonpass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.logonPass)
}
void ReqRegisterAccount::set_logonpass(const char* value, size_t size) {
  
  logonpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.logonPass)
}
::std::string* ReqRegisterAccount::mutable_logonpass() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.logonPass)
  return logonpass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_logonpass() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.logonPass)
  
  return logonpass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_logonpass(::std::string* logonpass) {
  if (logonpass != NULL) {
    
  } else {
    
  }
  logonpass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logonpass);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.logonPass)
}

// string account = 6;
void ReqRegisterAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::account() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.account)
  return account_.GetNoArena();
}
void ReqRegisterAccount::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.account)
}
#if LANG_CXX11
void ReqRegisterAccount::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.account)
}
#endif
void ReqRegisterAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.account)
}
void ReqRegisterAccount::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.account)
}
::std::string* ReqRegisterAccount::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_account() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.account)
}

// string nickName = 7;
void ReqRegisterAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::nickname() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.nickName)
  return nickname_.GetNoArena();
}
void ReqRegisterAccount::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.nickName)
}
#if LANG_CXX11
void ReqRegisterAccount::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.nickName)
}
#endif
void ReqRegisterAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.nickName)
}
void ReqRegisterAccount::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.nickName)
}
::std::string* ReqRegisterAccount::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.nickName)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.nickName)
}

// string spreaderCode = 8;
void ReqRegisterAccount::clear_spreadercode() {
  spreadercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::spreadercode() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.spreaderCode)
  return spreadercode_.GetNoArena();
}
void ReqRegisterAccount::set_spreadercode(const ::std::string& value) {
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.spreaderCode)
}
#if LANG_CXX11
void ReqRegisterAccount::set_spreadercode(::std::string&& value) {
  
  spreadercode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.spreaderCode)
}
#endif
void ReqRegisterAccount::set_spreadercode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.spreaderCode)
}
void ReqRegisterAccount::set_spreadercode(const char* value, size_t size) {
  
  spreadercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.spreaderCode)
}
::std::string* ReqRegisterAccount::mutable_spreadercode() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.spreaderCode)
  return spreadercode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_spreadercode() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.spreaderCode)
  
  return spreadercode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_spreadercode(::std::string* spreadercode) {
  if (spreadercode != NULL) {
    
  } else {
    
  }
  spreadercode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spreadercode);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.spreaderCode)
}

// string verifyCode = 9;
void ReqRegisterAccount::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::verifycode() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.verifyCode)
  return verifycode_.GetNoArena();
}
void ReqRegisterAccount::set_verifycode(const ::std::string& value) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.verifyCode)
}
#if LANG_CXX11
void ReqRegisterAccount::set_verifycode(::std::string&& value) {
  
  verifycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.verifyCode)
}
#endif
void ReqRegisterAccount::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.verifyCode)
}
void ReqRegisterAccount::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.verifyCode)
}
::std::string* ReqRegisterAccount::mutable_verifycode() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.verifyCode)
  return verifycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_verifycode() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_verifycode(::std::string* verifycode) {
  if (verifycode != NULL) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.verifyCode)
}

// string machineID = 10;
void ReqRegisterAccount::clear_machineid() {
  machineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqRegisterAccount::machineid() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqRegisterAccount.machineID)
  return machineid_.GetNoArena();
}
void ReqRegisterAccount::set_machineid(const ::std::string& value) {
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqRegisterAccount.machineID)
}
#if LANG_CXX11
void ReqRegisterAccount::set_machineid(::std::string&& value) {
  
  machineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqRegisterAccount.machineID)
}
#endif
void ReqRegisterAccount::set_machineid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqRegisterAccount.machineID)
}
void ReqRegisterAccount::set_machineid(const char* value, size_t size) {
  
  machineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqRegisterAccount.machineID)
}
::std::string* ReqRegisterAccount::mutable_machineid() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqRegisterAccount.machineID)
  return machineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqRegisterAccount::release_machineid() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqRegisterAccount.machineID)
  
  return machineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqRegisterAccount::set_allocated_machineid(::std::string* machineid) {
  if (machineid != NULL) {
    
  } else {
    
  }
  machineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machineid);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqRegisterAccount.machineID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqResetPasswd::kPhoneFieldNumber;
const int ReqResetPasswd::kCodeFieldNumber;
const int ReqResetPasswd::kPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqResetPasswd::ReqResetPasswd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_logon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qpcmd.ReqResetPasswd)
}
ReqResetPasswd::ReqResetPasswd(const ReqResetPasswd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  // @@protoc_insertion_point(copy_constructor:qpcmd.ReqResetPasswd)
}

void ReqResetPasswd::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReqResetPasswd::~ReqResetPasswd() {
  // @@protoc_insertion_point(destructor:qpcmd.ReqResetPasswd)
  SharedDtor();
}

void ReqResetPasswd::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqResetPasswd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqResetPasswd::descriptor() {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqResetPasswd& ReqResetPasswd::default_instance() {
  protobuf_logon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqResetPasswd* ReqResetPasswd::New(::google::protobuf::Arena* arena) const {
  ReqResetPasswd* n = new ReqResetPasswd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqResetPasswd::Clear() {
// @@protoc_insertion_point(message_clear_start:qpcmd.ReqResetPasswd)
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqResetPasswd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qpcmd.ReqResetPasswd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string phone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqResetPasswd.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqResetPasswd.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qpcmd.ReqResetPasswd.passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qpcmd.ReqResetPasswd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qpcmd.ReqResetPasswd)
  return false;
#undef DO_
}

void ReqResetPasswd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qpcmd.ReqResetPasswd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd(), output);
  }

  // @@protoc_insertion_point(serialize_end:qpcmd.ReqResetPasswd)
}

::google::protobuf::uint8* ReqResetPasswd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qpcmd.ReqResetPasswd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qpcmd.ReqResetPasswd.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qpcmd.ReqResetPasswd)
  return target;
}

size_t ReqResetPasswd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qpcmd.ReqResetPasswd)
  size_t total_size = 0;

  // string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqResetPasswd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qpcmd.ReqResetPasswd)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqResetPasswd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqResetPasswd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qpcmd.ReqResetPasswd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qpcmd.ReqResetPasswd)
    MergeFrom(*source);
  }
}

void ReqResetPasswd::MergeFrom(const ReqResetPasswd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qpcmd.ReqResetPasswd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
}

void ReqResetPasswd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qpcmd.ReqResetPasswd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqResetPasswd::CopyFrom(const ReqResetPasswd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qpcmd.ReqResetPasswd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqResetPasswd::IsInitialized() const {
  return true;
}

void ReqResetPasswd::Swap(ReqResetPasswd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqResetPasswd::InternalSwap(ReqResetPasswd* other) {
  phone_.Swap(&other->phone_);
  code_.Swap(&other->code_);
  passwd_.Swap(&other->passwd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqResetPasswd::GetMetadata() const {
  protobuf_logon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_logon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqResetPasswd

// string phone = 1;
void ReqResetPasswd::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqResetPasswd::phone() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.phone)
  return phone_.GetNoArena();
}
void ReqResetPasswd::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.phone)
}
#if LANG_CXX11
void ReqResetPasswd::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.phone)
}
#endif
void ReqResetPasswd::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.phone)
}
void ReqResetPasswd::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.phone)
}
::std::string* ReqResetPasswd::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqResetPasswd::release_phone() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqResetPasswd::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.phone)
}

// string code = 2;
void ReqResetPasswd::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqResetPasswd::code() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.code)
  return code_.GetNoArena();
}
void ReqResetPasswd::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.code)
}
#if LANG_CXX11
void ReqResetPasswd::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.code)
}
#endif
void ReqResetPasswd::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.code)
}
void ReqResetPasswd::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.code)
}
::std::string* ReqResetPasswd::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqResetPasswd::release_code() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqResetPasswd::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.code)
}

// string passwd = 3;
void ReqResetPasswd::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqResetPasswd::passwd() const {
  // @@protoc_insertion_point(field_get:qpcmd.ReqResetPasswd.passwd)
  return passwd_.GetNoArena();
}
void ReqResetPasswd::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qpcmd.ReqResetPasswd.passwd)
}
#if LANG_CXX11
void ReqResetPasswd::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qpcmd.ReqResetPasswd.passwd)
}
#endif
void ReqResetPasswd::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qpcmd.ReqResetPasswd.passwd)
}
void ReqResetPasswd::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qpcmd.ReqResetPasswd.passwd)
}
::std::string* ReqResetPasswd::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:qpcmd.ReqResetPasswd.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqResetPasswd::release_passwd() {
  // @@protoc_insertion_point(field_release:qpcmd.ReqResetPasswd.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqResetPasswd::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:qpcmd.ReqResetPasswd.passwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qpcmd

// @@protoc_insertion_point(global_scope)
